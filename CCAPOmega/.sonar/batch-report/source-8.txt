/*
 * VehicleDAO.java 7:44:54 PM Apr 30, 2010 version 1.0
 * 
 * Copyright (c) 1998-2010 Cognizant Technology Solutions, Inc. All Rights
 * Reserved.
 * 
 * This software is the confidential and proprietary information of Cognizant
 * Technology Solutions. ("Confidential Information"). You shall not disclose
 * such Confidential Information and shall use it only in accordance with the
 * terms of the license agreement you entered into with Cognizant.
 */

package com.omega.dao;

import java.sql.Connection;

import java.sql.SQLException;
import java.sql.Statement;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.omega.dtd.Vehicle;
import com.omega.utility.DBConnection;

/**
 * 
 * @author Java CoE
 * 
 *         Contains methods for persisting , editing vehicles detials
 * @version 1.0
 */
public class VehicleDAO implements IVehicleDAO
{
    

    /** Logger */
    private static final Logger LOGGER =
            LoggerFactory.getLogger(VehicleDAO.class.getName());
    
    /**
     * {@inheritDoc}
     */
    public void saveVechicleQuotation(Vehicle vehicle) throws SQLException
    {
	    System.out.println("testing!!!!!!!!!!!!!!!!!!");
		
		int count=0;		
//		try{
//		for(int x=0;x<2;x++){
//		   System.out.println("Sleepp..... for 2x1800000 seconds");
//		   Thread.sleep(1800000);
//		   count++;
//		}
//}catch(Exception exp){exp.printStackTrace();}
		
	    System.out.println("testing%%%%%%%%%%%%%%%%%%%%%%%%%");

	    System.out.println("Removed previous SCM comments");
	    System.out.println("Added by Uma SCM comments");
	    System.out.println("Added by Uma SCM comments");
	    System.out.println("Added by Uma SCM comments");
	    System.out.println("Added by Uma SCM comments");
	    System.out.println("Added by Uma SCM comments");
	    System.out.println("Added by Uma SCM comments");
	    System.out.println("Added by Uma SCM comments");
	    System.out.println("Added by Uma SCM comments");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");
	    System.out.println("testing");

        if (LOGGER.isInfoEnabled())
        {
            LOGGER.info("[CollectionController].[doGet] SSN Number {}",
                    new Object[] { vehicle.getSsn() });
        }
        final DBConnection dbConnection = new DBConnection();
        Connection connection = null;
        Statement dbStatement = null;
        final String updateQuery =
                "INSERT INTO vehicle_details (SSN,NAME,AGE,GENDER,"
                        + "VEHICLEMODEL,MAKE,YEAR,LICENSENUMBER,LSTYEARACCIDENTS,COVERAGETYPE"
                        + ",COVERAGEAMOUNT,PREMIUM)values ("
                        + vehicle.getSsn()
                        + ",'"
                        + vehicle.getName()
                        + "',"
                        + vehicle.getAge()
                        + ",'"
                        + vehicle.getGender()
                        + "','"
                        + vehicle.getVehicleModel()
                        + "','"
                        + vehicle.getMake()
                        + "',"
                        + vehicle.getYear()
                        + ",'"
                        + vehicle.getLicenseNumber()
                        + "',"
                        + vehicle.getLstYearAccidents()
                        + ",'"
                        + vehicle.getCoverageType()
                        + "',"
                        + vehicle.getCoverageAmount()
                        + ","
                        + vehicle.getPremium()
                        + ");";
        try
        {
            connection = dbConnection.getConnection();
            dbStatement = connection.createStatement();
            dbStatement.executeUpdate(updateQuery);
        } finally
        {
            try
            {
                dbStatement.close();
                dbStatement.close();
                connection.close();
            } catch (SQLException e)
            {
                if (LOGGER.isErrorEnabled())
                {
                    LOGGER.error(
                            "[CollectionController].[doGet] SQLException{}",
                            new Object[] { e.getMessage() });
                }
            }
        }
        
    }
    
}
