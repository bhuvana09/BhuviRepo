<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="com.cognizant.gto.ccap.eclipseplugin" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="com.cognizant.gto.ccap.eclipseplugin" id="markerResolution" name="CCAP Marker Resolution"/>
      </appinfo>
      <documentation>
         Extension point for contributing custom-resolution for corresponding custom-rules supplied to the Pattern Recognition Engine.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
         <documentation>
            Extension definition for detailing the information about the resolution contributions
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="resolution" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="resolution">
      <annotation>
         <documentation>
            Element declaring the needful information for extending the Marker Resolution by providing details about the target Resolution Framework.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="rule" type="string" use="required">
            <annotation>
               <documentation>
                  Unique Rule Name string that is identical to the string used for naming this Rule in Pattern Recognition Engine.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="info" type="string" use="required">
            <annotation>
               <documentation>
                  Unique Rule Description string that is identical to the string used for describing this Rule in Pattern Recognition Engine.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="group" type="string">
            <annotation>
               <documentation>
                  Optional Rule Grouping information that matches the corresponding attibute, if exists, in Violation Specification of Pattern Recognition Engine.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  Sub-class of the said API Class that implements the framework for resolving the marked Violation by supplying an approporiate Refactoring Engine.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="com.cognizant.gto.ccap.plugin.refactorextension.AbstractResolution:"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         CCAP 6.0
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         &lt;fragment&gt;
   &lt;extension
         id=&quot;MarkerResolutionExtension&quot;
         name=&quot;CCAP Marker Resolution Contribution&quot;
         point=&quot;com.cognizant.gto.ccap.eclipseplugin.markerResolution&quot;&gt;
      &lt;resolution
            class=&quot;&lt;qualified name of the resolution class&gt;&quot;
            info=&quot;&lt;meaningful description of the coding pattern needing correction&gt;&quot;
            rule=&quot;&lt;verbatim text of the rule name used for pattern detection&gt;&quot;&gt;
      &lt;/resolution&gt;
      .
      .
      .
   &lt;/extension&gt;
&lt;/fragment&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         The functional design of this extension point is realised through inheriting and implementing the com.cognizant.gto.ccap.plugin.refactorextension.AbstractResolution class by overriding it as below:
...&lt;Inherited Constructor&gt;(String ruleName, String description) {
	super(ruleName, description);
	setLogger(this);
	getLogger().info(&quot;Logging from: &quot; + this.getClass().getname());
	.
	.
	.
}
.
.
.
... executeResolution() {
	getCompilationUnit().accept(&lt;Class implementing ASTVisitor&gt;);
	.
	.
	.
	setEditAndSaveFlag(true);
}

Furthermore, there are many protected access methods to help with handling CCAP markers, notably, getMarkerLineNumber() and such others.
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         CCAP packages an extension plugin &quot;com.cognizant.gto.ccap.refactorextension_1.0.0&quot; that demonstrates a few rules with refactoring implemented through this extension point
      </documentation>
   </annotation>


</schema>
